RED='\033[0;31m'
PURPLE='\033[0;35m'
NC='\033[0m' # No Color
verbose=0
project_name="other"
git_url="some"
while getopts "h?v?g:p:" opt; do
    case "$opt" in
    h|\?)
	printf "${PURPLE}leadtime [options] -g <git server url> -p <project name or number>${NC}\n" 1>&2 
	printf "Report create and closed times for each closed issue\n" 1>&2 
	printf "Options:\n" 1>&2 
	printf "   -v : Verbose mode\n" 1>&2 
	printf "   -h : Help\n" 1>&2
	printf "set environment variable GIT_AUTH_TOKEN before usage. See https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html\n" 1>&2 
        exit 0
        ;;
    v)  verbose=1
        ;;
    n)  force_login=0
        ;;
    p) project_name="$OPTARG";;
    g) git_url="$OPTARG";;    
    esac
done

printf "id,created,closed,description,assignee,state,labels\n"
url="$git_url/api/v4/projects/$project_name"
if [ $verbose -eq 1 ]; then  printf "${PURPLE} using API endpoint $url ${NC}\n" 1>&2 ; fi
curl -I -N -s -k --header "PRIVATE-TOKEN: $GIT_AUTH_TOKEN" "$url/issues?scope=all&per_page=100&state=closed" > .leadtime_headers.txt

num_pages=`cat .leadtime_headers.txt | grep "X-Total-Pages:" | tr -d '\r' | sed -En 's/^X-Total-Pages: ([0-9]*)/\1/p'`

num_issues=`cat .leadtime_headers.txt | grep "X-Total:" | tr -d '\r' | sed -En 's/^X-Total: ([0-9]*)/\1/p'`

if [ $verbose -eq 1 ]; then  printf "${PURPLE} $num_issues matching issues divided in $num_pages pages of size 100. ${NC}\n" 1>&2 ; fi

for page in $(seq 1 $END); do
    issues=`curl -s -N -k --header "PRIVATE-TOKEN: $GIT_AUTH_TOKEN" "$url/issues?scope=all&per_page=100&page=$page&state=closed" | jq -r '.[] | .iid'`

    for i in $issues	     
    do
    if [ $verbose -eq 1 ]; then  printf "${RED} Issue IID issue_iid $i ${NC}\n" 1>&2 ; fi
	
	issue=`curl -s -N -k --header "PRIVATE-TOKEN: $GIT_AUTH_TOKEN" $url/issues/$i`
	if [ $verbose -eq 1 ]; then  printf "${PURPLE} $issue ${NC}\n" 1>&2 ; fi
	echo $issue | jq -r '(.iid|tostring)+","+(.created_at | split("T")[0])+","+(.updated_at | split("T")[0])+","+(.title)+","+(.assignee.name)+","+(.state)+","+(.labels|tostring)'
	
    done
done

